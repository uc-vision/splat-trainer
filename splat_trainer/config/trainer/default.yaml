# @package _global_

trainer:
  _target_: splat_trainer.trainer.TrainConfig

  # These need to be defined elsewhere
  scene: ???
  controller: ???
  view_selection: ???

  # Point cloud initialization settings
  cloud_init:
    _target_: splat_trainer.trainer.CloudInitConfig

    # initial scale is (mean distance to num_neighbors) * initial_point_scale
    num_neighbors: 5
    initial_point_scale: 0.2
    initial_alpha: 0.2

    initial_points: 500000  
    limit_points: null

    clamp_near: 1.0
    min_view_overlap: 4 # minimum number of views a point must be visible in when adding random points

  # Scheduling settings
  total_steps: ${int_mul:20000,${training_scale}}
  eval_steps: ${int_mul:2000,${training_scale}}
  log_interval: 10

  # target point cloud size 
  target_points: ${int_mul:1000000,${training_scale}}


  # Evaluation settings
  num_logged_images: 8
  log_worst_images: 2

  log_details: False

  # Loss function settings
  ssim_weight: 1.0 # ssim is expensive but converges faster than just l1 loss
  # l1_weight: 1.0
  mse_weight: 10.0
  ssim_levels: 3

  # view similarity
  vis_clusters: 1024

  # renderer settings
  antialias: False
  blur_cov: 0.3 # only used if antialias is false

  # General settings
  device: "cuda:0"
  save_checkpoints: False
  save_output: True


training_scale: 1
test_every: 8

far: 100.0
near: 0.1

normalize:
  _target_: splat_trainer.dataset.NormalizationConfig
  centering: True
  scaling_method: 'none'
  normalize_knn: 20


